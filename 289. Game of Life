class Solution:
    def gameOfLife(self, board):
        """
        :type board: List[List[int]]
        :rtype: void Do not return anything, modify board in-place instead.
        """
        res = [ [ board[i][j] for j in range(len(board[0])) ] for i in range(len(board))]
        
        for i in range(len(board)):
            for j in range(len(board[0])):
                neighbours = self.getNeighbours(i, j, res)
                #print(i, j, neighbours)
                if neighbours < 2:
                    board[i][j] = 0
                elif neighbours == 3 or (res[i][j] == 1 and neighbours == 2):
                    board[i][j] = 1
                elif neighbours > 3:
                    board[i][j] = 0
        
        
    def getNeighbours(self, i, j, res):
        s_i = i-1 if i > 0 else 0
        e_i = i+1 if i < len(res)-1 else i
        s_j = j-1 if j>0 else 0
        e_j = j+1 if j<len(res[0])-1 else j
        #print(i, j, s_i, e_i, s_j, e_j)
        count = 0
        while s_i <= e_i:
            t = s_j
            while t <= e_j:
                count += res[s_i][t]
                t += 1
            s_i += 1

        return count - 1 if res[i][j] == 1 else count
                    
        
        
